#include <iostream>
#include "ResourceTable.h"
using namespace std;

int main() {
    try { // обрабатываем исключения
        ResourceTable table; // создаем пустую таблицу ресурсов
        ResourceTable table2; // создаем пустую таблицу ресурсов

        Resource r; // создаем объект класса Ресурс
        
        string name; // создаем строковую переменную
        Resource res;
        
        double factor; // создаем вещественную переменную

        string oldName, newName; // создаем две строковые переменные

        int index1, index2;
        
        int choice; // переменная для выбора действия
        bool exit = false; // флаг для выхода из цикла
        while (!exit) { // пока не выходим
            cout << "Выберите действие:\n"; // выводим меню
            cout << "1. Ввести новую таблицу ресурсов с клавиатуры\n";
            cout << "2. Вывести таблицу ресурсов на экран\n";
            cout << "3. Добавить новый ресурс в таблицу\n";
            cout << "4. Получить ресурс по его наименованию\n";
            cout << "5. Проверить состояние таблицы\n";
            cout << "6. Удалить ресурс с заданным наименованием из таблицы\n";
            cout << "7. Вычислить общую прибыльность по всем ресурсам\n";
            cout << "8. Увеличить оборот всех ресурсов в заданное число раз\n";
            cout << "9. Переименовать заданный ресурс\n";
            cout << "10. Объединение двух ресурсов таблицы\n";
            cout << "11. Сложение двух таблиц\n";
            cout << "0. Выход\n";
            cin >> choice; // вводим выбор
            switch (choice) { // в зависимости от выбора
                case 1: // если ввести таблицу
                    cout << "Введите количество ресурсов и их данные:\n";
                    //table.input(cin); // вводим таблицу с клавиатуры
                    cin >> table;
                    break;
                case 2: // если вывести таблицу
                    cout << "Таблица ресурсов:\n";
                    //table.output(cout); // выводим таблицу на экран
                    cout << table;
                    break;
                case 3: // если добавить новый ресурс
                    cout << "Введите данные нового ресурса:\n";
                    r.input(cin); // вводим его данные с клавиатуры
                    table += r; // добавляем его в таблицу
                    cout << "Ресурс добавлен\n";
                    break;
                case 4: // если получить ресурс по наименованию
                    cout << "Введите наименование ресурса:\n";
                    cin >> name; // вводим наименование с клавиатуры
                    res = table[name]; // получаем ресурс из таблицы
                    if (res.getName() == "") { // если ресурс пустой
                        cout << "Ресурс с таким наименованием не найден\n";
                    }
                    else { // иначе
                        cout << "Ресурс с наименованием " << name << ":\n";
                        res.output(cout); // выводим его данные на экран
                    }
                    break;
                case 5: // если проверить состояние таблицы
                    cout << "Состояние таблицы: " << table.state() << "\n"; // выводим состояние таблицы
                    break;
                case 6: // если удалить ресурс с заданным наименованием
                    cout << "Введите наименование ресурса для удаления:\n";
                    cin >> name; // вводим наименование с клавиатуры
                    if (table.remove(name)) { // если удаление успешно
                        cout << "Ресурс удален\n";
                    }
                    else { // иначе
                        cout << "Ресурс с таким наименованием не найден\n";
                    }
                    break;
                case 7: // если вычислить общую прибыльность
                    cout << "Общая прибыльность по всем ресурсам: " << table.totalProfit() << "\n"; // выводим общую прибыльность
                    break;
                case 8: // если увеличить оборот всех ресурсов
                    cout << "Введите коэффициент увеличения оборота:\n";
                    cin >> factor; // вводим коэффициент с клавиатуры
                    table.multiply(factor); // увеличиваем оборот всех ресурсов
                    cout << "Оборот всех ресурсов увеличен в " << factor << " раз\n";
                    break;
                case 9: // если переименовать заданный ресурс
                    cout << "Введите старое и новое наименования ресурса:\n";
                    cin >> oldName >> newName; // вводим их с клавиатуры
                    if (table.rename(oldName, newName)) { // если переименование успешно
                        cout << "Ресурс переименован\n";
                    }
                    else { // иначе
                        cout << "Ресурс с таким наименованием не найден\n";
                    }
                    break;
                case 10: // если объединить два ресурса таблицы по выбору
                    cout << "Введите индексы двух ресурсов для объединения:\n";
                    cin >> index1 >> index2; // вводим индексы с клавиатуры
                    if (index1 >= 0 && index1 < table.getSize() && index2 >= 0 && index2 < table.getSize()) { // если индексы корректны
                        Resource r1 = table.getResources()[index1]; // получаем первый ресурс
                        Resource r2 = table.getResources()[index2]; // получаем второй ресурс
                        Resource r3;
                        if (r1.getName() == r2.getName()) { // если ресурсы имеют одинаковое наименование
                            r3 = r1.operator+(r2); // получаем новый ресурс, который является суммой двух ресурсов
                            r3.output(cout);;
                            table += r3;
                            //table.getResources()[index2] = r3; // заменяем в таблице второй ресурс на новый ресурс
                            table.remove(r1.getName()); // удаляем из таблицы первый ресурс
                            table.remove(r2.getName()); // удаляем из таблицы первый ресурс
                            cout << "Ресурсы объединены\n";
                        }
                        else { // иначе
                            cout << "Ресурсы имеют разное наименование, объединение невозможно\n";
                        }
                    }
                    else { // иначе
                        cout << "Некорректные индексы, объединение невозможно\n";
                    }
                    break;
                case 11:
                    cout << "Введите количество ресурсов и их данные:\n";
                    cin >> table2;
                    table = table + table2;
                    break;
                case 0: // если выход
                    exit = true; // выставляем флаг выхода
                    cout << "Завершение программы\n";
                    break;
                default: // если неверный выбор
                    cout << "Неверный выбор, попробуйте снова\n";
                    break;
            }
        }
        return 0; // возвращаем ноль при успешном завершении программы
    }
    catch (bad_alloc& e) { // если возникло исключение при выделении динамической памяти
        cerr << "Ошибка выделения памяти: " << e.what() << "\n"; // выводим сообщение об ошибке
        return 1; // возвращаем единицу при неуспешном завершении программы
    }
    catch (...) { // если возникло любое другое исключение
        cerr << "Неизвестная ошибка\n"; // выводим сообщение об ошибке
        return 2; // возвращаем двойку при неуспешном завершении программы
    }
}